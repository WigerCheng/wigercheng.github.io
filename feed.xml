<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://wigercheng.github.io//</id><title>Wiger代码手记</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-04-25T12:00:39+08:00</updated> <author> <name>WigerCheng</name> <uri>https://wigercheng.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://wigercheng.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://wigercheng.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 WigerCheng </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Android动画之淡入淡出动画</title><link href="https://wigercheng.github.io//posts/Android_Fade_Animation/" rel="alternate" type="text/html" title="Android动画之淡入淡出动画" /><published>2022-04-25T00:00:00+08:00</published> <updated>2022-04-25T00:00:00+08:00</updated> <id>https://wigercheng.github.io//posts/Android_Fade_Animation/</id> <content src="https://wigercheng.github.io//posts/Android_Fade_Animation/" /> <author> <name>WigerCheng</name> </author> <category term="Android" /> <category term="Animation" /> <summary> 淡入淡出动画 在安卓开发中，常用淡入淡出的动画来显示加载中的效果。比如在加载新闻列表时，先显示骨架屏动画，当请求成功后，骨架屏以淡出的形式消失，新闻列表项以淡入的形式出现。或者是加载图片的时候，默认显示一个空的图片或占位图片，当图片加载成功，占位图片以淡出的形式消失，加载的图片以淡入的形式显示。 一个简单的例子。以Android Logo作为占位图，员工头像为请求的图片。 实现淡入淡出动画 准备两个ImageView 一个ImageView显示占位图，一个显示ImageView请求的图片。请求图片的ImageView的visibility默认是Gone。 &amp;lt;FrameLayout android:layout_width="match_parent" android:layout_height="0dp" android:layout_... </summary> </entry> <entry><title>Android动画之圆形揭露动画</title><link href="https://wigercheng.github.io//posts/Android_Circle_Animation/" rel="alternate" type="text/html" title="Android动画之圆形揭露动画" /><published>2022-04-24T00:00:00+08:00</published> <updated>2022-04-24T00:00:00+08:00</updated> <id>https://wigercheng.github.io//posts/Android_Circle_Animation/</id> <content src="https://wigercheng.github.io//posts/Android_Circle_Animation/" /> <author> <name>WigerCheng</name> </author> <category term="Android" /> <category term="Animation" /> <summary> 圆形揭露动画 圆形揭露动画，可以让一个View裁剪成一个圆形，并以指定的圆心做半径变化动画。 当您显示或隐藏一组界面元素时，可给用户提供视觉连续性。 使用圆形揭露动画 通过调用ViewAnimationUtils.createCircularReveal()返回一个Animator实例，调用animator.start()显示动画。 createCircularReveal() 动画采用五个参数。 View -&amp;gt; 即要执行动画的View。 centerX -&amp;gt; 指定圆心的x点坐标。 centerY -&amp;gt; 指定圆心的y点坐标。 startRadius -&amp;gt; 动画开始前剪裁圆形的半径 。 endRadius -&amp;gt; 动画结束时的圆形半径。 代码实现参考 findViewById&amp;lt;Button&amp;gt;(R.id.btn_... </summary> </entry> <entry><title>Android开发——颜色</title><link href="https://wigercheng.github.io//posts/Android_Color/" rel="alternate" type="text/html" title="Android开发——颜色" /><published>2022-04-20T00:00:00+08:00</published> <updated>2022-04-20T00:00:00+08:00</updated> <id>https://wigercheng.github.io//posts/Android_Color/</id> <content src="https://wigercheng.github.io//posts/Android_Color/" /> <author> <name>WigerCheng</name> </author> <category term="Android" /> <category term="Develop" /> <summary> Android中的颜色值通常遵循RGB/ARGB标准，使用时通常以“ # ”字符开头的8位16进制表示。其中ARGB 依次代表透明度（Alpha）、红色(Red)、绿色(Green)、蓝色(Blue)，取值范围为0 ~ 255（即16进制的0x00 ~ 0xff）。 作者：翻译不了的声响 链接：https://www.jianshu.com/p/3c1fe10aed4f 来源：简书 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 透明度参考表 透明度 取值 100% 00 95% 0D 90% 1A 85% 26 ... </summary> </entry> <entry><title>Android MVP架构</title><link href="https://wigercheng.github.io//posts/Android_MVP/" rel="alternate" type="text/html" title="Android MVP架构" /><published>2022-04-19T00:00:00+08:00</published> <updated>2022-04-19T00:00:00+08:00</updated> <id>https://wigercheng.github.io//posts/Android_MVP/</id> <content src="https://wigercheng.github.io//posts/Android_MVP/" /> <author> <name>WigerCheng</name> </author> <category term="Android" /> <category term="Architecture" /> <summary> 什么是MVP？ MVP的全称为Model-View-Presenter，Model提供数据，View负责显示，Controller/Presenter负责逻辑的处理。 来自维基百科的模型描述 Model-View-Presenter (MVP) 是用户界面设计模式的一种，被广泛用于便捷自动化单元测试和在呈现逻辑中改良分离关注点（separation of concerns）。 Model 定义用户界面所需要被显示的资料模型，一个模型包含着相关的业务逻辑。 View 视图为呈现用户界面的终端，用以表现来自 Model 的资料，和用户命令路由再经过 Presenter 对事件处理后的资料。 Presenter 包含着组件的事件处理，负责检索 Model 获取资料，和将获取的资料经过格式转换与 View 进行沟通。 Android 实现... </summary> </entry> <entry><title>Android动画之视图动画</title><link href="https://wigercheng.github.io//posts/Android_Basic_Animation/" rel="alternate" type="text/html" title="Android动画之视图动画" /><published>2022-04-19T00:00:00+08:00</published> <updated>2022-04-19T00:00:00+08:00</updated> <id>https://wigercheng.github.io//posts/Android_Basic_Animation/</id> <content src="https://wigercheng.github.io//posts/Android_Basic_Animation/" /> <author> <name>WigerCheng</name> </author> <category term="Android" /> <category term="Animation" /> <summary> Android View 动画框架 Animation框架定义了透明度、旋转、缩放和位移几种常见的动面，而且控制的是整个view，实现原理是每次绘制视图时 View 所在的 ViewGroup 中的drawChild 函数获取该 View 的Animation 的 Transformation 值，然后调用 canvas.concat(transformToApply.getMatrix())，通过矩阵运算完成动画帧。如果动画没有完成，就继续调用 invalidate()函数，启动下次绘制來驱动动画，从而完成整个动画的绘制。——《Android群英传》 视图动画四种动画方式 AlphaAnimation（透明度动画） 为视图添加透明度的变换动画。 构建AlphaAnimation2个参数 fromAlpha 开始的透明度 to... </summary> </entry> </feed>
